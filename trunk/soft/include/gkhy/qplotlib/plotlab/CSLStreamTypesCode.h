//------------------------------------------------------------------------------
//
//                    Generated by VCL C++ .NET FrontEnd.
//                   (C)Copyright Boian Mitov 2005 - 2009
//                              www.mitov.com
//
//------------------------------------------------------------------------------
#ifndef CSLStreamTypesCode_H_
#define CSLStreamTypesCode_H_

//------------------------------------------------------------------------------
inline TLPFunctionEntry CTLPCustomControl::GetFunction( const char *function_name )
{
  TLPFunctionEntry Result = VCL_GetFunction( LibraryHandle, function_name );
  if( Result )
    return Result;

  return inherited::GetFunction( function_name );
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify::CTLPLockedPersistentNotify( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify::CTLPLockedPersistentNotify( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify::CTLPLockedPersistentNotify( CLPClassProperty *a_property, CTLPLockedPersistentNotify ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify::CTLPLockedPersistentNotify( CLPClassProperty *a_property, CTLPLockedPersistentNotify ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPLockedPersistentNotify ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify::CTLPLockedPersistentNotify( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPLockedPersistentNotify ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify::CTLPLockedPersistentNotify( CLPBaseComponent *a_control, CTLPLockedPersistentNotify ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify::CTLPLockedPersistentNotify( CLPBaseComponent *a_control, CTLPLockedPersistentNotify ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPLockedPersistentNotify ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify::CTLPLockedPersistentNotify( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify::CTLPLockedPersistentNotify( const CTLPLockedPersistentNotify &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTLPLockedPersistentNotify & CTLPLockedPersistentNotify::operator = ( const CTLPLockedPersistentNotify & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPLockedPersistentNotify::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty::CTLPOptionalProperty( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty::CTLPOptionalProperty( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty::CTLPOptionalProperty( CLPClassProperty *a_property, CTLPOptionalProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty::CTLPOptionalProperty( CLPClassProperty *a_property, CTLPOptionalProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty::CTLPOptionalProperty( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPOptionalProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty::CTLPOptionalProperty( CLPBaseComponent *a_control, CTLPOptionalProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty::CTLPOptionalProperty( CLPBaseComponent *a_control, CTLPOptionalProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalProperty ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty::CTLPOptionalProperty( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty::CTLPOptionalProperty( const CTLPOptionalProperty &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalProperty & CTLPOptionalProperty::operator = ( const CTLPOptionalProperty & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPOptionalProperty::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::CTVLOptionalPenProperty( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::CTVLOptionalPenProperty( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::CTVLOptionalPenProperty( CLPClassProperty *a_property, CTVLOptionalPenProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::CTVLOptionalPenProperty( CLPClassProperty *a_property, CTVLOptionalPenProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTVLOptionalPenProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::CTVLOptionalPenProperty( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTVLOptionalPenProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::CTVLOptionalPenProperty( CLPBaseComponent *a_control, CTVLOptionalPenProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::CTVLOptionalPenProperty( CLPBaseComponent *a_control, CTVLOptionalPenProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTVLOptionalPenProperty ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::CTVLOptionalPenProperty( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::CTVLOptionalPenProperty( const CTVLOptionalPenProperty &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty::~CTVLOptionalPenProperty()
{
  delete &Pen;
}
//------------------------------------------------------------------------------
inline CTVLOptionalPenProperty & CTVLOptionalPenProperty::operator = ( const CTVLOptionalPenProperty & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTVLOptionalPenProperty::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
#endif   // CSLStreamTypesCode_H_
//------------------------------------------------------------------------------
