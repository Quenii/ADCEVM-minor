//------------------------------------------------------------------------------
//
//                    Generated by VCL C++ .NET FrontEnd.
//                   (C)Copyright Boian Mitov 2005 - 2009
//                              www.mitov.com
//
//------------------------------------------------------------------------------
#ifndef CSLWaterfallCode_H_
#define CSLWaterfallCode_H_

//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition::CTSLWaterfallMarkerPosition( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition::CTSLWaterfallMarkerPosition( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition::CTSLWaterfallMarkerPosition( CLPClassProperty *a_property, CTSLWaterfallMarkerPosition ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition::CTSLWaterfallMarkerPosition( CLPClassProperty *a_property, CTSLWaterfallMarkerPosition ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerPosition ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition::CTSLWaterfallMarkerPosition( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerPosition ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition::CTSLWaterfallMarkerPosition( CLPBaseComponent *a_control, CTSLWaterfallMarkerPosition ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition::CTSLWaterfallMarkerPosition( CLPBaseComponent *a_control, CTSLWaterfallMarkerPosition ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerPosition ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition::CTSLWaterfallMarkerPosition( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition::CTSLWaterfallMarkerPosition( const CTSLWaterfallMarkerPosition &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerPosition & CTSLWaterfallMarkerPosition::operator = ( const CTSLWaterfallMarkerPosition & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallMarkerPosition::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::CTSLWaterfallMarker( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Position( *new CTSLWaterfallMarkerPosition( GetInstance(), _T( "Position" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::CTSLWaterfallMarker( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Position( *new CTSLWaterfallMarkerPosition( GetInstance(), _T( "Position" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::CTSLWaterfallMarker( CLPClassProperty *a_property, CTSLWaterfallMarker ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Position( *new CTSLWaterfallMarkerPosition( GetInstance(), _T( "Position" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::CTSLWaterfallMarker( CLPClassProperty *a_property, CTSLWaterfallMarker ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarker ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Position( *new CTSLWaterfallMarkerPosition( GetInstance(), _T( "Position" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::CTSLWaterfallMarker( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarker ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Position( *new CTSLWaterfallMarkerPosition( GetInstance(), _T( "Position" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::CTSLWaterfallMarker( CLPBaseComponent *a_control, CTSLWaterfallMarker ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Position( *new CTSLWaterfallMarkerPosition( GetInstance(), _T( "Position" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::CTSLWaterfallMarker( CLPBaseComponent *a_control, CTSLWaterfallMarker ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarker ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Position( *new CTSLWaterfallMarkerPosition( GetInstance(), _T( "Position" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::CTSLWaterfallMarker( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Position( *new CTSLWaterfallMarkerPosition( GetInstance(), _T( "Position" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::CTSLWaterfallMarker( const CTSLWaterfallMarker &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Position( *new CTSLWaterfallMarkerPosition( GetInstance(), _T( "Position" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker::~CTSLWaterfallMarker()
{
  delete &Position;
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarker & CTSLWaterfallMarker::operator = ( const CTSLWaterfallMarker & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallMarker::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers::CTSLWaterfallMarkers( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers::CTSLWaterfallMarkers( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers::CTSLWaterfallMarkers( CLPClassProperty *a_property, CTSLWaterfallMarkers ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers::CTSLWaterfallMarkers( CLPClassProperty *a_property, CTSLWaterfallMarkers ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkers ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers::CTSLWaterfallMarkers( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkers ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers::CTSLWaterfallMarkers( CLPBaseComponent *a_control, CTSLWaterfallMarkers ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers::CTSLWaterfallMarkers( CLPBaseComponent *a_control, CTSLWaterfallMarkers ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkers ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers::CTSLWaterfallMarkers( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers::CTSLWaterfallMarkers( const CTSLWaterfallMarkers &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkers & CTSLWaterfallMarkers::operator = ( const CTSLWaterfallMarkers & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallMarkers::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine::CTSLWaterfallMarkerGroupLine( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) ),
  UsePointsColor( GetInstance(), _T( "UsePointsColor" ) ),
  Color( GetInstance(), _T( "Color" ) ),
  Width( GetInstance(), _T( "Width" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine::CTSLWaterfallMarkerGroupLine( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) ),
  UsePointsColor( GetInstance(), _T( "UsePointsColor" ) ),
  Color( GetInstance(), _T( "Color" ) ),
  Width( GetInstance(), _T( "Width" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine::CTSLWaterfallMarkerGroupLine( CLPClassProperty *a_property, CTSLWaterfallMarkerGroupLine ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Visible( GetInstance(), _T( "Visible" ) ),
  UsePointsColor( GetInstance(), _T( "UsePointsColor" ) ),
  Color( GetInstance(), _T( "Color" ) ),
  Width( GetInstance(), _T( "Width" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine::CTSLWaterfallMarkerGroupLine( CLPClassProperty *a_property, CTSLWaterfallMarkerGroupLine ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerGroupLine ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Visible( GetInstance(), _T( "Visible" ) ),
  UsePointsColor( GetInstance(), _T( "UsePointsColor" ) ),
  Color( GetInstance(), _T( "Color" ) ),
  Width( GetInstance(), _T( "Width" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine::CTSLWaterfallMarkerGroupLine( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerGroupLine ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Visible( GetInstance(), _T( "Visible" ) ),
  UsePointsColor( GetInstance(), _T( "UsePointsColor" ) ),
  Color( GetInstance(), _T( "Color" ) ),
  Width( GetInstance(), _T( "Width" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine::CTSLWaterfallMarkerGroupLine( CLPBaseComponent *a_control, CTSLWaterfallMarkerGroupLine ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Visible( GetInstance(), _T( "Visible" ) ),
  UsePointsColor( GetInstance(), _T( "UsePointsColor" ) ),
  Color( GetInstance(), _T( "Color" ) ),
  Width( GetInstance(), _T( "Width" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine::CTSLWaterfallMarkerGroupLine( CLPBaseComponent *a_control, CTSLWaterfallMarkerGroupLine ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerGroupLine ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Visible( GetInstance(), _T( "Visible" ) ),
  UsePointsColor( GetInstance(), _T( "UsePointsColor" ) ),
  Color( GetInstance(), _T( "Color" ) ),
  Width( GetInstance(), _T( "Width" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine::CTSLWaterfallMarkerGroupLine( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) ),
  UsePointsColor( GetInstance(), _T( "UsePointsColor" ) ),
  Color( GetInstance(), _T( "Color" ) ),
  Width( GetInstance(), _T( "Width" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine::CTSLWaterfallMarkerGroupLine( const CTSLWaterfallMarkerGroupLine &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) ),
  UsePointsColor( GetInstance(), _T( "UsePointsColor" ) ),
  Color( GetInstance(), _T( "Color" ) ),
  Width( GetInstance(), _T( "Width" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroupLine & CTSLWaterfallMarkerGroupLine::operator = ( const CTSLWaterfallMarkerGroupLine & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallMarkerGroupLine::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::CTSLWaterfallMarkerGroup( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Markers( *new CTSLWaterfallMarkers( GetInstance(), _T( "Markers" ))),
  Line( *new CTSLWaterfallMarkerGroupLine( GetInstance(), _T( "Line" ))),
  Mode( GetInstance(), _T( "Mode" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::CTSLWaterfallMarkerGroup( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Markers( *new CTSLWaterfallMarkers( GetInstance(), _T( "Markers" ))),
  Line( *new CTSLWaterfallMarkerGroupLine( GetInstance(), _T( "Line" ))),
  Mode( GetInstance(), _T( "Mode" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::CTSLWaterfallMarkerGroup( CLPClassProperty *a_property, CTSLWaterfallMarkerGroup ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Markers( *new CTSLWaterfallMarkers( GetInstance(), _T( "Markers" ))),
  Line( *new CTSLWaterfallMarkerGroupLine( GetInstance(), _T( "Line" ))),
  Mode( GetInstance(), _T( "Mode" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::CTSLWaterfallMarkerGroup( CLPClassProperty *a_property, CTSLWaterfallMarkerGroup ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerGroup ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Markers( *new CTSLWaterfallMarkers( GetInstance(), _T( "Markers" ))),
  Line( *new CTSLWaterfallMarkerGroupLine( GetInstance(), _T( "Line" ))),
  Mode( GetInstance(), _T( "Mode" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::CTSLWaterfallMarkerGroup( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerGroup ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Markers( *new CTSLWaterfallMarkers( GetInstance(), _T( "Markers" ))),
  Line( *new CTSLWaterfallMarkerGroupLine( GetInstance(), _T( "Line" ))),
  Mode( GetInstance(), _T( "Mode" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::CTSLWaterfallMarkerGroup( CLPBaseComponent *a_control, CTSLWaterfallMarkerGroup ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Markers( *new CTSLWaterfallMarkers( GetInstance(), _T( "Markers" ))),
  Line( *new CTSLWaterfallMarkerGroupLine( GetInstance(), _T( "Line" ))),
  Mode( GetInstance(), _T( "Mode" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::CTSLWaterfallMarkerGroup( CLPBaseComponent *a_control, CTSLWaterfallMarkerGroup ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerGroup ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Markers( *new CTSLWaterfallMarkers( GetInstance(), _T( "Markers" ))),
  Line( *new CTSLWaterfallMarkerGroupLine( GetInstance(), _T( "Line" ))),
  Mode( GetInstance(), _T( "Mode" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::CTSLWaterfallMarkerGroup( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Markers( *new CTSLWaterfallMarkers( GetInstance(), _T( "Markers" ))),
  Line( *new CTSLWaterfallMarkerGroupLine( GetInstance(), _T( "Line" ))),
  Mode( GetInstance(), _T( "Mode" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::CTSLWaterfallMarkerGroup( const CTSLWaterfallMarkerGroup &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Markers( *new CTSLWaterfallMarkers( GetInstance(), _T( "Markers" ))),
  Line( *new CTSLWaterfallMarkerGroupLine( GetInstance(), _T( "Line" ))),
  Mode( GetInstance(), _T( "Mode" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup::~CTSLWaterfallMarkerGroup()
{
  delete &Markers;
  delete &Line;
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroup & CTSLWaterfallMarkerGroup::operator = ( const CTSLWaterfallMarkerGroup & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallMarkerGroup::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups::CTSLWaterfallMarkerGroups( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups::CTSLWaterfallMarkerGroups( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups::CTSLWaterfallMarkerGroups( CLPClassProperty *a_property, CTSLWaterfallMarkerGroups ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups::CTSLWaterfallMarkerGroups( CLPClassProperty *a_property, CTSLWaterfallMarkerGroups ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerGroups ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups::CTSLWaterfallMarkerGroups( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerGroups ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups::CTSLWaterfallMarkerGroups( CLPBaseComponent *a_control, CTSLWaterfallMarkerGroups ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups::CTSLWaterfallMarkerGroups( CLPBaseComponent *a_control, CTSLWaterfallMarkerGroups ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallMarkerGroups ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups::CTSLWaterfallMarkerGroups( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups::CTSLWaterfallMarkerGroups( const CTSLWaterfallMarkerGroups &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallMarkerGroups & CTSLWaterfallMarkerGroups::operator = ( const CTSLWaterfallMarkerGroups & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallMarkerGroups::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline void CTSLWaterfallMarkerGroups::ClearAllMarkers()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLWaterfallMarkerGroups@ClearAllMarkers$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData::CTSLBasicWaterfallData( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  SampleRate( (CTSLBasicWaterfallData *)GetInstance(), &CTSLBasicWaterfallData::GetSampleRateProp, &CTSLBasicWaterfallData::SetSampleRateProp)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData::CTSLBasicWaterfallData( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  SampleRate( (CTSLBasicWaterfallData *)GetInstance(), &CTSLBasicWaterfallData::GetSampleRateProp, &CTSLBasicWaterfallData::SetSampleRateProp)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData::CTSLBasicWaterfallData( CLPClassProperty *a_property, CTSLBasicWaterfallData ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  SampleRate( (CTSLBasicWaterfallData *)GetInstance(), &CTSLBasicWaterfallData::GetSampleRateProp, &CTSLBasicWaterfallData::SetSampleRateProp)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData::CTSLBasicWaterfallData( CLPClassProperty *a_property, CTSLBasicWaterfallData ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLBasicWaterfallData ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  SampleRate( (CTSLBasicWaterfallData *)GetInstance(), &CTSLBasicWaterfallData::GetSampleRateProp, &CTSLBasicWaterfallData::SetSampleRateProp)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData::CTSLBasicWaterfallData( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLBasicWaterfallData ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  SampleRate( (CTSLBasicWaterfallData *)GetInstance(), &CTSLBasicWaterfallData::GetSampleRateProp, &CTSLBasicWaterfallData::SetSampleRateProp)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData::CTSLBasicWaterfallData( CLPBaseComponent *a_control, CTSLBasicWaterfallData ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  SampleRate( (CTSLBasicWaterfallData *)GetInstance(), &CTSLBasicWaterfallData::GetSampleRateProp, &CTSLBasicWaterfallData::SetSampleRateProp)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData::CTSLBasicWaterfallData( CLPBaseComponent *a_control, CTSLBasicWaterfallData ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLBasicWaterfallData ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  SampleRate( (CTSLBasicWaterfallData *)GetInstance(), &CTSLBasicWaterfallData::GetSampleRateProp, &CTSLBasicWaterfallData::SetSampleRateProp)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData::CTSLBasicWaterfallData( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  SampleRate( (CTSLBasicWaterfallData *)GetInstance(), &CTSLBasicWaterfallData::GetSampleRateProp, &CTSLBasicWaterfallData::SetSampleRateProp)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData::CTSLBasicWaterfallData( const CTSLBasicWaterfallData &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  SampleRate( (CTSLBasicWaterfallData *)GetInstance(), &CTSLBasicWaterfallData::GetSampleRateProp, &CTSLBasicWaterfallData::SetSampleRateProp)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallData & CTSLBasicWaterfallData::operator = ( const CTSLBasicWaterfallData & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLBasicWaterfallData::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfallData::AddData( const unsigned short * ABufer, int ASize )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfallData@AddData$qqrpusi" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    const unsigned short * __1_Param1 = ABufer;
    int __1_Param2 = ASize;

    _asm
      {
      push eax
      push edx
      push ecx
      mov  edx,__1_Param1
      mov  ecx,__1_Param2
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  ecx
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfallData::AddData( const short * ABufer, int ASize )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfallData@AddData$qqrpdi" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    const short * __1_Param1 = ABufer;
    int __1_Param2 = ASize;

    _asm
      {
      push eax
      push edx
      push ecx
      mov  edx,__1_Param1
      mov  ecx,__1_Param2
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  ecx
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfallData::AddData( const unsigned int * ABufer, int ASize )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfallData@AddData$qqrpdi" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    const unsigned int * __1_Param1 = ABufer;
    int __1_Param2 = ASize;

    _asm
      {
      push eax
      push edx
      push ecx
      mov  edx,__1_Param1
      mov  ecx,__1_Param2
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  ecx
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfallData::AddData( const int * ABufer, int ASize )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfallData@AddData$qqrpii" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    const int * __1_Param1 = ABufer;
    int __1_Param2 = ASize;

    _asm
      {
      push eax
      push edx
      push ecx
      mov  edx,__1_Param1
      mov  ecx,__1_Param2
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  ecx
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfallData::AddData( const float * ABufer, int ASize )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfallData@AddData$qqrpfi" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    const float * __1_Param1 = ABufer;
    int __1_Param2 = ASize;

    _asm
      {
      push eax
      push edx
      push ecx
      mov  edx,__1_Param1
      mov  ecx,__1_Param2
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  ecx
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfallData::AddData( const double * ABufer, int ASize )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfallData@AddData$qqrpdi" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    const double * __1_Param1 = ABufer;
    int __1_Param2 = ASize;

    _asm
      {
      push eax
      push edx
      push ecx
      mov  edx,__1_Param1
      mov  ecx,__1_Param2
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  ecx
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfallData::Clear()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfallData@Clear$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline double CTSLBasicWaterfallData::GetSampleRateProp()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfallData@GetSampleRateProp$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  union
    {
    struct
      {
      DWORD First;
      DWORD Second;
      } Words;
    double Value;
  } __0_RtnValue_;
  __0_RtnValue_.Value = 0;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      fstp __0_RtnValue_
      pop  eax
      }
    }

  return __0_RtnValue_.Value;
}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfallData::SetSampleRateProp( double Value )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfallData@SetSampleRateProp$qqrd" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param1;
    __1_Param1.Value = Value;

    _asm
      {
      push eax
      push __1_Param1.Words.Second
      push __1_Param1.Words.First
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTSLWaterfallData::CTSLWaterfallData( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData::CTSLWaterfallData( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData::CTSLWaterfallData( CLPClassProperty *a_property, CTSLWaterfallData ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData::CTSLWaterfallData( CLPClassProperty *a_property, CTSLWaterfallData ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallData ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData::CTSLWaterfallData( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallData ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData::CTSLWaterfallData( CLPBaseComponent *a_control, CTSLWaterfallData ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData::CTSLWaterfallData( CLPBaseComponent *a_control, CTSLWaterfallData ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallData ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData::CTSLWaterfallData( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData::CTSLWaterfallData( const CTSLWaterfallData &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData & CTSLWaterfallData::operator = ( const CTSLWaterfallData & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallData::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline void CTSLWaterfallData::Clear()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLWaterfallData@Clear$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::CTSLWaterfallXAxis( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Samples( GetInstance(), _T( "Samples" ) ),
  Reversed( (CTSLWaterfallXAxis *)GetInstance(), &CTSLWaterfallXAxis::GetReversed, &CTSLWaterfallXAxis::SetReversedProp),
  MinTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MinTick" ))),
  MaxTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MaxTick" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::CTSLWaterfallXAxis( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Samples( GetInstance(), _T( "Samples" ) ),
  Reversed( (CTSLWaterfallXAxis *)GetInstance(), &CTSLWaterfallXAxis::GetReversed, &CTSLWaterfallXAxis::SetReversedProp),
  MinTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MinTick" ))),
  MaxTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MaxTick" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::CTSLWaterfallXAxis( CLPClassProperty *a_property, CTSLWaterfallXAxis ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Samples( GetInstance(), _T( "Samples" ) ),
  Reversed( (CTSLWaterfallXAxis *)GetInstance(), &CTSLWaterfallXAxis::GetReversed, &CTSLWaterfallXAxis::SetReversedProp),
  MinTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MinTick" ))),
  MaxTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MaxTick" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::CTSLWaterfallXAxis( CLPClassProperty *a_property, CTSLWaterfallXAxis ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallXAxis ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Samples( GetInstance(), _T( "Samples" ) ),
  Reversed( (CTSLWaterfallXAxis *)GetInstance(), &CTSLWaterfallXAxis::GetReversed, &CTSLWaterfallXAxis::SetReversedProp),
  MinTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MinTick" ))),
  MaxTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MaxTick" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::CTSLWaterfallXAxis( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallXAxis ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Samples( GetInstance(), _T( "Samples" ) ),
  Reversed( (CTSLWaterfallXAxis *)GetInstance(), &CTSLWaterfallXAxis::GetReversed, &CTSLWaterfallXAxis::SetReversedProp),
  MinTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MinTick" ))),
  MaxTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MaxTick" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::CTSLWaterfallXAxis( CLPBaseComponent *a_control, CTSLWaterfallXAxis ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Samples( GetInstance(), _T( "Samples" ) ),
  Reversed( (CTSLWaterfallXAxis *)GetInstance(), &CTSLWaterfallXAxis::GetReversed, &CTSLWaterfallXAxis::SetReversedProp),
  MinTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MinTick" ))),
  MaxTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MaxTick" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::CTSLWaterfallXAxis( CLPBaseComponent *a_control, CTSLWaterfallXAxis ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallXAxis ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Samples( GetInstance(), _T( "Samples" ) ),
  Reversed( (CTSLWaterfallXAxis *)GetInstance(), &CTSLWaterfallXAxis::GetReversed, &CTSLWaterfallXAxis::SetReversedProp),
  MinTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MinTick" ))),
  MaxTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MaxTick" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::CTSLWaterfallXAxis( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Samples( GetInstance(), _T( "Samples" ) ),
  Reversed( (CTSLWaterfallXAxis *)GetInstance(), &CTSLWaterfallXAxis::GetReversed, &CTSLWaterfallXAxis::SetReversedProp),
  MinTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MinTick" ))),
  MaxTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MaxTick" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::CTSLWaterfallXAxis( const CTSLWaterfallXAxis &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Samples( GetInstance(), _T( "Samples" ) ),
  Reversed( (CTSLWaterfallXAxis *)GetInstance(), &CTSLWaterfallXAxis::GetReversed, &CTSLWaterfallXAxis::SetReversedProp),
  MinTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MinTick" ))),
  MaxTick( *new CTSLBasicAxisValue( GetInstance(), _T( "MaxTick" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis::~CTSLWaterfallXAxis()
{
  delete &MinTick;
  delete &MaxTick;
}
//------------------------------------------------------------------------------
inline CTSLWaterfallXAxis & CTSLWaterfallXAxis::operator = ( const CTSLWaterfallXAxis & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallXAxis::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline bool CTSLWaterfallXAxis::GetReversed()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLWaterfallXAxis@GetReversed$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  bool __0_RtnValue_ = (bool)0;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      mov  __0_RtnValue_,al
      pop  eax
      }
    }

  return (bool)__0_RtnValue_;
}
//------------------------------------------------------------------------------
inline void CTSLWaterfallXAxis::SetReversedProp( bool AValue )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLWaterfallXAxis@SetReversedProp$qqro" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    unsigned char __1_Param1 = (unsigned char)AValue;

    _asm
      {
      push eax
      push edx
      mov  dl,__1_Param1
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::CTSLWaterfallLegendView( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  MarkerGroups( *new CTSLLegendGroup( GetInstance(), _T( "MarkerGroups" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::CTSLWaterfallLegendView( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  MarkerGroups( *new CTSLLegendGroup( GetInstance(), _T( "MarkerGroups" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::CTSLWaterfallLegendView( CLPClassProperty *a_property, CTSLWaterfallLegendView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  MarkerGroups( *new CTSLLegendGroup( GetInstance(), _T( "MarkerGroups" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::CTSLWaterfallLegendView( CLPClassProperty *a_property, CTSLWaterfallLegendView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallLegendView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  MarkerGroups( *new CTSLLegendGroup( GetInstance(), _T( "MarkerGroups" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::CTSLWaterfallLegendView( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallLegendView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  MarkerGroups( *new CTSLLegendGroup( GetInstance(), _T( "MarkerGroups" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::CTSLWaterfallLegendView( CLPBaseComponent *a_control, CTSLWaterfallLegendView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  MarkerGroups( *new CTSLLegendGroup( GetInstance(), _T( "MarkerGroups" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::CTSLWaterfallLegendView( CLPBaseComponent *a_control, CTSLWaterfallLegendView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallLegendView ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  MarkerGroups( *new CTSLLegendGroup( GetInstance(), _T( "MarkerGroups" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::CTSLWaterfallLegendView( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  MarkerGroups( *new CTSLLegendGroup( GetInstance(), _T( "MarkerGroups" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::CTSLWaterfallLegendView( const CTSLWaterfallLegendView &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  MarkerGroups( *new CTSLLegendGroup( GetInstance(), _T( "MarkerGroups" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView::~CTSLWaterfallLegendView()
{
  delete &MarkerGroups;
}
//------------------------------------------------------------------------------
inline CTSLWaterfallLegendView & CTSLWaterfallLegendView::operator = ( const CTSLWaterfallLegendView & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallLegendView::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::CTSLWaterfallHighlighting( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Markers( *new CTSLDisplayItemHighlighting( GetInstance(), _T( "Markers" ))),
  MouseHitPoint( *new CTSLChannelMouseHitPoint( GetInstance(), _T( "MouseHitPoint" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::CTSLWaterfallHighlighting( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Markers( *new CTSLDisplayItemHighlighting( GetInstance(), _T( "Markers" ))),
  MouseHitPoint( *new CTSLChannelMouseHitPoint( GetInstance(), _T( "MouseHitPoint" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::CTSLWaterfallHighlighting( CLPClassProperty *a_property, CTSLWaterfallHighlighting ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Markers( *new CTSLDisplayItemHighlighting( GetInstance(), _T( "Markers" ))),
  MouseHitPoint( *new CTSLChannelMouseHitPoint( GetInstance(), _T( "MouseHitPoint" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::CTSLWaterfallHighlighting( CLPClassProperty *a_property, CTSLWaterfallHighlighting ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallHighlighting ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Markers( *new CTSLDisplayItemHighlighting( GetInstance(), _T( "Markers" ))),
  MouseHitPoint( *new CTSLChannelMouseHitPoint( GetInstance(), _T( "MouseHitPoint" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::CTSLWaterfallHighlighting( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallHighlighting ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Markers( *new CTSLDisplayItemHighlighting( GetInstance(), _T( "Markers" ))),
  MouseHitPoint( *new CTSLChannelMouseHitPoint( GetInstance(), _T( "MouseHitPoint" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::CTSLWaterfallHighlighting( CLPBaseComponent *a_control, CTSLWaterfallHighlighting ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Markers( *new CTSLDisplayItemHighlighting( GetInstance(), _T( "Markers" ))),
  MouseHitPoint( *new CTSLChannelMouseHitPoint( GetInstance(), _T( "MouseHitPoint" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::CTSLWaterfallHighlighting( CLPBaseComponent *a_control, CTSLWaterfallHighlighting ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallHighlighting ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Markers( *new CTSLDisplayItemHighlighting( GetInstance(), _T( "Markers" ))),
  MouseHitPoint( *new CTSLChannelMouseHitPoint( GetInstance(), _T( "MouseHitPoint" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::CTSLWaterfallHighlighting( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Markers( *new CTSLDisplayItemHighlighting( GetInstance(), _T( "Markers" ))),
  MouseHitPoint( *new CTSLChannelMouseHitPoint( GetInstance(), _T( "MouseHitPoint" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::CTSLWaterfallHighlighting( const CTSLWaterfallHighlighting &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Markers( *new CTSLDisplayItemHighlighting( GetInstance(), _T( "Markers" ))),
  MouseHitPoint( *new CTSLChannelMouseHitPoint( GetInstance(), _T( "MouseHitPoint" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting::~CTSLWaterfallHighlighting()
{
  delete &Markers;
  delete &MouseHitPoint;
}
//------------------------------------------------------------------------------
inline CTSLWaterfallHighlighting & CTSLWaterfallHighlighting::operator = ( const CTSLWaterfallHighlighting & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallHighlighting::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfall::CTSLBasicWaterfall() :
  Title( *new CTSLDisplayTitle( GetInstance(), _T( "Title" ))),
  XAxis( *new CTSLWaterfallXAxis( GetInstance(), _T( "XAxis" ))),
  YAxis( *new CTSLWaterfallYAxis( GetInstance(), _T( "YAxis" ))),
  Legend( *new CTSLWaterfallLegendView( GetInstance(), _T( "Legend" ))),
  MarkerGroups( *new CTSLWaterfallMarkerGroups( GetInstance(), _T( "MarkerGroups" ))),
  Highlighting( *new CTSLWaterfallHighlighting( GetInstance(), _T( "Highlighting" ))),
  Vertical( GetInstance(), _T( "Vertical" ) ),
  RefreshInterval( (CTSLBasicWaterfall *)GetInstance(), &CTSLBasicWaterfall::GetRefreshInterval, &CTSLBasicWaterfall::SetRefreshInterval)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfall::~CTSLBasicWaterfall()
{
  delete &Title;
  delete &XAxis;
  delete &YAxis;
  delete &Legend;
  delete &MarkerGroups;
  delete &Highlighting;
}
//------------------------------------------------------------------------------
inline TLPFunctionEntry CTSLBasicWaterfall::GetFunction( const char *function_name )
{
  TLPFunctionEntry Result = VCL_GetFunction( LibraryHandle, function_name );
  if( Result )
    return Result;

  return inherited::GetFunction( function_name );
}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfall::Print()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfall@Print$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfall::ZoomTo( double XMin, double XMax, double YMin, double YMax, bool SaveHistory )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfall@ZoomTo$qqrddddo" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param1;
    __1_Param1.Value = XMin;
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param2;
    __1_Param2.Value = XMax;
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param3;
    __1_Param3.Value = YMin;
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param4;
    __1_Param4.Value = YMax;
    int __1_Param5 = (int)SaveHistory;

    _asm
      {
      push eax
      push edx
      push __1_Param1.Words.Second
      push __1_Param1.Words.First
      push __1_Param2.Words.Second
      push __1_Param2.Words.First
      push __1_Param3.Words.Second
      push __1_Param3.Words.First
      push __1_Param4.Words.Second
      push __1_Param4.Words.First
      mov  edx,__1_Param5
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfall::ZoomToData( double XMin, double XMax, double YMin, double YMax, bool SaveHistory )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfall@ZoomToData$qqrddddo" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param1;
    __1_Param1.Value = XMin;
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param2;
    __1_Param2.Value = XMax;
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param3;
    __1_Param3.Value = YMin;
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param4;
    __1_Param4.Value = YMax;
    int __1_Param5 = (int)SaveHistory;

    _asm
      {
      push eax
      push edx
      push __1_Param1.Words.Second
      push __1_Param1.Words.First
      push __1_Param2.Words.Second
      push __1_Param2.Words.First
      push __1_Param3.Words.Second
      push __1_Param3.Words.First
      push __1_Param4.Words.Second
      push __1_Param4.Words.First
      mov  edx,__1_Param5
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfall::ZoomBy( double XValue, double YValue, bool SaveHistory )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfall@ZoomBy$qqrddo" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param1;
    __1_Param1.Value = XValue;
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param2;
    __1_Param2.Value = YValue;
    int __1_Param3 = (int)SaveHistory;

    _asm
      {
      push eax
      push edx
      push __1_Param1.Words.Second
      push __1_Param1.Words.First
      push __1_Param2.Words.Second
      push __1_Param2.Words.First
      mov  edx,__1_Param3
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline unsigned int CTSLBasicWaterfall::GetRefreshInterval()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfall@GetRefreshInterval$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  unsigned int __0_RtnValue_ = (unsigned int)0;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      mov  __0_RtnValue_,eax
      pop  eax
      }
    }

  return (unsigned int)__0_RtnValue_;
}
//------------------------------------------------------------------------------
inline void CTSLBasicWaterfall::SetRefreshInterval( unsigned int AValue )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLBasicWaterfall@SetRefreshInterval$qqrui" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    unsigned int __1_Param1 = AValue;

    _asm
      {
      push eax
      push edx
      mov  edx,__1_Param1
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::CTSLWaterfallDisplayLevelView( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Button( *new CTSLViewButtonSettings( GetInstance(), _T( "Button" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::CTSLWaterfallDisplayLevelView( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Button( *new CTSLViewButtonSettings( GetInstance(), _T( "Button" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::CTSLWaterfallDisplayLevelView( CLPClassProperty *a_property, CTSLWaterfallDisplayLevelView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Button( *new CTSLViewButtonSettings( GetInstance(), _T( "Button" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::CTSLWaterfallDisplayLevelView( CLPClassProperty *a_property, CTSLWaterfallDisplayLevelView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallDisplayLevelView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Button( *new CTSLViewButtonSettings( GetInstance(), _T( "Button" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::CTSLWaterfallDisplayLevelView( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallDisplayLevelView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Button( *new CTSLViewButtonSettings( GetInstance(), _T( "Button" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::CTSLWaterfallDisplayLevelView( CLPBaseComponent *a_control, CTSLWaterfallDisplayLevelView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Button( *new CTSLViewButtonSettings( GetInstance(), _T( "Button" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::CTSLWaterfallDisplayLevelView( CLPBaseComponent *a_control, CTSLWaterfallDisplayLevelView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallDisplayLevelView ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Button( *new CTSLViewButtonSettings( GetInstance(), _T( "Button" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::CTSLWaterfallDisplayLevelView( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Button( *new CTSLViewButtonSettings( GetInstance(), _T( "Button" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::CTSLWaterfallDisplayLevelView( const CTSLWaterfallDisplayLevelView &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Button( *new CTSLViewButtonSettings( GetInstance(), _T( "Button" )))
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView::~CTSLWaterfallDisplayLevelView()
{
  delete &Button;
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDisplayLevelView & CTSLWaterfallDisplayLevelView::operator = ( const CTSLWaterfallDisplayLevelView & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallDisplayLevelView::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLWaterfall::CTSLWaterfall( HWND hParent ) :
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLWaterfallDisplayLevelView( GetInstance(), _T( "Levels" ))),
  DataView( *new CTSLWaterfallDataView( GetInstance(), ( CTSLWaterfallDataView ( CLPBaseClass::* )() ) &::CTSLWaterfall::GetWaterfallDataView )),
  Data( *new CTSLWaterfallData( GetInstance(), ( CTSLWaterfallData ( CLPBaseClass::* )() ) &::CTSLWaterfall::GetVC_Data ))
{
  LibraryHandle = ::Get_SignalLabScopePkgCB6();
  Open( hParent );
}
//------------------------------------------------------------------------------
inline CTSLWaterfall::CTSLWaterfall() :
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLWaterfallDisplayLevelView( GetInstance(), _T( "Levels" ))),
  DataView( *new CTSLWaterfallDataView( GetInstance(), ( CTSLWaterfallDataView ( CLPBaseClass::* )() ) &::CTSLWaterfall::GetWaterfallDataView )),
  Data( *new CTSLWaterfallData( GetInstance(), ( CTSLWaterfallData ( CLPBaseClass::* )() ) &::CTSLWaterfall::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline void CTSLWaterfall::Open( HWND hParent )
{
  LibraryHandle = ::Get_SignalLabScopePkgCB6();
  CLPControl::OpenControl( _T( "TSLWaterfall" ), hParent );
}
//------------------------------------------------------------------------------
inline CTSLWaterfall::~CTSLWaterfall()
{
  delete &Levels;
  delete &DataView;
  delete &Data;
}
//------------------------------------------------------------------------------
inline TLPFunctionEntry CTSLWaterfall::GetFunction( const char *function_name )
{
  TLPFunctionEntry Result = VCL_GetFunction( LibraryHandle, function_name );
  if( Result )
    return Result;

  return inherited::GetFunction( function_name );
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView CTSLWaterfall::GetWaterfallDataView()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLWaterfall@GetWaterfallDataView$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  VCLHANDLE __0_RtnValue_ = NULL;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      mov  __0_RtnValue_,eax
      pop  eax
      }
    }

  return (CTSLWaterfallDataView)__0_RtnValue_;
}
//------------------------------------------------------------------------------
inline CTSLWaterfallData CTSLWaterfall::GetVC_Data()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLWaterfall@GetVC_Data$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  VCLHANDLE __0_RtnValue_ = NULL;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      mov  __0_RtnValue_,eax
      pop  eax
      }
    }

  return (CTSLWaterfallData)__0_RtnValue_;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline TLPFunctionEntry CTSLWaterfallLayer::GetFunction( const char *function_name )
{
  TLPFunctionEntry Result = VCL_GetFunction( LibraryHandle, function_name );
  if( Result )
    return Result;

  return inherited::GetFunction( function_name );
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView::CTSLBasicWaterfallDataView( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView::CTSLBasicWaterfallDataView( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView::CTSLBasicWaterfallDataView( CLPClassProperty *a_property, CTSLBasicWaterfallDataView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView::CTSLBasicWaterfallDataView( CLPClassProperty *a_property, CTSLBasicWaterfallDataView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLBasicWaterfallDataView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView::CTSLBasicWaterfallDataView( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLBasicWaterfallDataView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView::CTSLBasicWaterfallDataView( CLPBaseComponent *a_control, CTSLBasicWaterfallDataView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView::CTSLBasicWaterfallDataView( CLPBaseComponent *a_control, CTSLBasicWaterfallDataView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLBasicWaterfallDataView ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView::CTSLBasicWaterfallDataView( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView::CTSLBasicWaterfallDataView( const CTSLBasicWaterfallDataView &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicWaterfallDataView & CTSLBasicWaterfallDataView::operator = ( const CTSLBasicWaterfallDataView & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLBasicWaterfallDataView::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView::CTSLWaterfallDataView( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView::CTSLWaterfallDataView( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView::CTSLWaterfallDataView( CLPClassProperty *a_property, CTSLWaterfallDataView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView::CTSLWaterfallDataView( CLPClassProperty *a_property, CTSLWaterfallDataView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallDataView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView::CTSLWaterfallDataView( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallDataView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView::CTSLWaterfallDataView( CLPBaseComponent *a_control, CTSLWaterfallDataView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView::CTSLWaterfallDataView( CLPBaseComponent *a_control, CTSLWaterfallDataView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallDataView ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView::CTSLWaterfallDataView( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView::CTSLWaterfallDataView( const CTSLWaterfallDataView &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallDataView & CTSLWaterfallDataView::operator = ( const CTSLWaterfallDataView & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallDataView::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline double CTSLWaterfallDataView::GetValueAt( int X, int Y )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLWaterfallDataView@GetValueAt$qqrii" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  union
    {
    struct
      {
      DWORD First;
      DWORD Second;
      } Words;
    double Value;
  } __0_RtnValue_;
  __0_RtnValue_.Value = 0;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    int __1_Param1 = X;
    int __1_Param2 = Y;

    _asm
      {
      push eax
      push edx
      push ecx
      mov  edx,__1_Param1
      mov  ecx,__1_Param2
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      fstp __0_RtnValue_
      pop  ecx
      pop  edx
      pop  eax
      }
    }

  return __0_RtnValue_.Value;
}
//------------------------------------------------------------------------------
inline double CTSLWaterfallDataView::GetValueAtScale( double X, double Y )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLWaterfallDataView@GetValueAtScale$qqrdd" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  union
    {
    struct
      {
      DWORD First;
      DWORD Second;
      } Words;
    double Value;
  } __0_RtnValue_;
  __0_RtnValue_.Value = 0;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param1;
    __1_Param1.Value = X;
    union
      {
      struct
        {
        DWORD First;
        DWORD Second;
        } Words;
        double Value;
      } __1_Param2;
    __1_Param2.Value = Y;

    _asm
      {
      push eax
      push __1_Param1.Words.Second
      push __1_Param1.Words.First
      push __1_Param2.Words.Second
      push __1_Param2.Words.First
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      fstp __0_RtnValue_
      pop  eax
      }
    }

  return __0_RtnValue_.Value;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis::CTSLWaterfallYAxis( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  TicksMode( GetInstance(), _T( "TicksMode" ) ),
  MinTick( GetInstance(), _T( "MinTick" ) ),
  MaxTick( GetInstance(), _T( "MaxTick" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis::CTSLWaterfallYAxis( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  TicksMode( GetInstance(), _T( "TicksMode" ) ),
  MinTick( GetInstance(), _T( "MinTick" ) ),
  MaxTick( GetInstance(), _T( "MaxTick" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis::CTSLWaterfallYAxis( CLPClassProperty *a_property, CTSLWaterfallYAxis ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  TicksMode( GetInstance(), _T( "TicksMode" ) ),
  MinTick( GetInstance(), _T( "MinTick" ) ),
  MaxTick( GetInstance(), _T( "MaxTick" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis::CTSLWaterfallYAxis( CLPClassProperty *a_property, CTSLWaterfallYAxis ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallYAxis ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  TicksMode( GetInstance(), _T( "TicksMode" ) ),
  MinTick( GetInstance(), _T( "MinTick" ) ),
  MaxTick( GetInstance(), _T( "MaxTick" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis::CTSLWaterfallYAxis( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLWaterfallYAxis ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  TicksMode( GetInstance(), _T( "TicksMode" ) ),
  MinTick( GetInstance(), _T( "MinTick" ) ),
  MaxTick( GetInstance(), _T( "MaxTick" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis::CTSLWaterfallYAxis( CLPBaseComponent *a_control, CTSLWaterfallYAxis ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  TicksMode( GetInstance(), _T( "TicksMode" ) ),
  MinTick( GetInstance(), _T( "MinTick" ) ),
  MaxTick( GetInstance(), _T( "MaxTick" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis::CTSLWaterfallYAxis( CLPBaseComponent *a_control, CTSLWaterfallYAxis ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLWaterfallYAxis ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  TicksMode( GetInstance(), _T( "TicksMode" ) ),
  MinTick( GetInstance(), _T( "MinTick" ) ),
  MaxTick( GetInstance(), _T( "MaxTick" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis::CTSLWaterfallYAxis( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  TicksMode( GetInstance(), _T( "TicksMode" ) ),
  MinTick( GetInstance(), _T( "MinTick" ) ),
  MaxTick( GetInstance(), _T( "MaxTick" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis::CTSLWaterfallYAxis( const CTSLWaterfallYAxis &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  TicksMode( GetInstance(), _T( "TicksMode" ) ),
  MinTick( GetInstance(), _T( "MinTick" ) ),
  MaxTick( GetInstance(), _T( "MaxTick" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLWaterfallYAxis & CTSLWaterfallYAxis::operator = ( const CTSLWaterfallYAxis & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLWaterfallYAxis::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTString CTSLWaterfallYAxis::GetAxisLabelText()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slwaterfall@TSLWaterfallYAxis@GetAxisLabelText$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  CTString __0_RtnValue_;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    VCLHANDLE __0_RtnValue_TMP_ = ::VCL_CallAnsiStringGetMember( __0_ThisPtr_, (VCLHANDLE)__0_FuncPtr_ );
    if( __0_RtnValue_TMP_ )
      {
      __0_RtnValue_ = ::VCL_GetCString( __0_RtnValue_TMP_ );
      VCL_DestroyAnsiString( __0_RtnValue_TMP_ );
      }
    }

  return (CTString)__0_RtnValue_;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#endif   // CSLWaterfallCode_H_
//------------------------------------------------------------------------------
