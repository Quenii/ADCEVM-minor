//------------------------------------------------------------------------------
//
//                    Generated by VCL C++ .NET FrontEnd.
//                   (C)Copyright Boian Mitov 2005 - 2009
//                              www.mitov.com
//
//------------------------------------------------------------------------------
#ifndef CPLMultiWaterfallCode_H_
#define CPLMultiWaterfallCode_H_

//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::CTSLChannelDisplayLevelView( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  LevelLabel( *new CTSLBasicLevelDisplayLabel( GetInstance(), ( CTSLBasicLevelDisplayLabel ( CLPBaseClass::* )() ) &::CTSLChannelDisplayLevelView::GetLevelLabel, ( void ( CLPBaseClass::* )( CTSLBasicLevelDisplayLabel ) ) &::CTSLChannelDisplayLevelView::SetLevelLabel ))
{
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::CTSLChannelDisplayLevelView( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  LevelLabel( *new CTSLBasicLevelDisplayLabel( GetInstance(), ( CTSLBasicLevelDisplayLabel ( CLPBaseClass::* )() ) &::CTSLChannelDisplayLevelView::GetLevelLabel, ( void ( CLPBaseClass::* )( CTSLBasicLevelDisplayLabel ) ) &::CTSLChannelDisplayLevelView::SetLevelLabel ))
{
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::CTSLChannelDisplayLevelView( CLPClassProperty *a_property, CTSLChannelDisplayLevelView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  LevelLabel( *new CTSLBasicLevelDisplayLabel( GetInstance(), ( CTSLBasicLevelDisplayLabel ( CLPBaseClass::* )() ) &::CTSLChannelDisplayLevelView::GetLevelLabel, ( void ( CLPBaseClass::* )( CTSLBasicLevelDisplayLabel ) ) &::CTSLChannelDisplayLevelView::SetLevelLabel ))
{
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::CTSLChannelDisplayLevelView( CLPClassProperty *a_property, CTSLChannelDisplayLevelView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLChannelDisplayLevelView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  LevelLabel( *new CTSLBasicLevelDisplayLabel( GetInstance(), ( CTSLBasicLevelDisplayLabel ( CLPBaseClass::* )() ) &::CTSLChannelDisplayLevelView::GetLevelLabel, ( void ( CLPBaseClass::* )( CTSLBasicLevelDisplayLabel ) ) &::CTSLChannelDisplayLevelView::SetLevelLabel ))
{
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::CTSLChannelDisplayLevelView( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLChannelDisplayLevelView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  LevelLabel( *new CTSLBasicLevelDisplayLabel( GetInstance(), ( CTSLBasicLevelDisplayLabel ( CLPBaseClass::* )() ) &::CTSLChannelDisplayLevelView::GetLevelLabel, ( void ( CLPBaseClass::* )( CTSLBasicLevelDisplayLabel ) ) &::CTSLChannelDisplayLevelView::SetLevelLabel ))
{
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::CTSLChannelDisplayLevelView( CLPBaseComponent *a_control, CTSLChannelDisplayLevelView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  LevelLabel( *new CTSLBasicLevelDisplayLabel( GetInstance(), ( CTSLBasicLevelDisplayLabel ( CLPBaseClass::* )() ) &::CTSLChannelDisplayLevelView::GetLevelLabel, ( void ( CLPBaseClass::* )( CTSLBasicLevelDisplayLabel ) ) &::CTSLChannelDisplayLevelView::SetLevelLabel ))
{
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::CTSLChannelDisplayLevelView( CLPBaseComponent *a_control, CTSLChannelDisplayLevelView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLChannelDisplayLevelView ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  LevelLabel( *new CTSLBasicLevelDisplayLabel( GetInstance(), ( CTSLBasicLevelDisplayLabel ( CLPBaseClass::* )() ) &::CTSLChannelDisplayLevelView::GetLevelLabel, ( void ( CLPBaseClass::* )( CTSLBasicLevelDisplayLabel ) ) &::CTSLChannelDisplayLevelView::SetLevelLabel ))
{
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::CTSLChannelDisplayLevelView( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  LevelLabel( *new CTSLBasicLevelDisplayLabel( GetInstance(), ( CTSLBasicLevelDisplayLabel ( CLPBaseClass::* )() ) &::CTSLChannelDisplayLevelView::GetLevelLabel, ( void ( CLPBaseClass::* )( CTSLBasicLevelDisplayLabel ) ) &::CTSLChannelDisplayLevelView::SetLevelLabel ))
{
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::CTSLChannelDisplayLevelView( const CTSLChannelDisplayLevelView &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  LevelLabel( *new CTSLBasicLevelDisplayLabel( GetInstance(), ( CTSLBasicLevelDisplayLabel ( CLPBaseClass::* )() ) &::CTSLChannelDisplayLevelView::GetLevelLabel, ( void ( CLPBaseClass::* )( CTSLBasicLevelDisplayLabel ) ) &::CTSLChannelDisplayLevelView::SetLevelLabel ))
{
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView::~CTSLChannelDisplayLevelView()
{
  delete &LevelLabel;
}
//------------------------------------------------------------------------------
inline CTSLChannelDisplayLevelView & CTSLChannelDisplayLevelView::operator = ( const CTSLChannelDisplayLevelView & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLChannelDisplayLevelView::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLBasicLevelDisplayLabel CTSLChannelDisplayLevelView::GetLevelLabel()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Plmultiwaterfall@TSLChannelDisplayLevelView@GetLevelLabel$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  VCLHANDLE __0_RtnValue_ = NULL;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      mov  __0_RtnValue_,eax
      pop  eax
      }
    }

  return (CTSLBasicLevelDisplayLabel)__0_RtnValue_;
}
//------------------------------------------------------------------------------
inline void CTSLChannelDisplayLevelView::SetLevelLabel( CTSLBasicLevelDisplayLabel AValue )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Plmultiwaterfall@TSLChannelDisplayLevelView@SetLevelLabel$qqrp40Slleveldisplay@TSLBasicLevelDisplayLabel" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    VCLHANDLE __1_Param1 = AValue.GetInternalHandle();

    _asm
      {
      push eax
      push edx
      mov  edx,__1_Param1
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::CTPLMultiWaterfallChannel( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLChannelDisplayLevelView( GetInstance(), _T( "Levels" ))),
  Color( GetInstance(), _T( "Color" ) ),
  Data( *new CTSLMultiWaterfallChannelData( GetInstance(), ( CTSLMultiWaterfallChannelData ( CLPBaseClass::* )() ) &::CTPLMultiWaterfallChannel::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::CTPLMultiWaterfallChannel( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLChannelDisplayLevelView( GetInstance(), _T( "Levels" ))),
  Color( GetInstance(), _T( "Color" ) ),
  Data( *new CTSLMultiWaterfallChannelData( GetInstance(), ( CTSLMultiWaterfallChannelData ( CLPBaseClass::* )() ) &::CTPLMultiWaterfallChannel::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::CTPLMultiWaterfallChannel( CLPClassProperty *a_property, CTPLMultiWaterfallChannel ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLChannelDisplayLevelView( GetInstance(), _T( "Levels" ))),
  Color( GetInstance(), _T( "Color" ) ),
  Data( *new CTSLMultiWaterfallChannelData( GetInstance(), ( CTSLMultiWaterfallChannelData ( CLPBaseClass::* )() ) &::CTPLMultiWaterfallChannel::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::CTPLMultiWaterfallChannel( CLPClassProperty *a_property, CTPLMultiWaterfallChannel ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTPLMultiWaterfallChannel ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLChannelDisplayLevelView( GetInstance(), _T( "Levels" ))),
  Color( GetInstance(), _T( "Color" ) ),
  Data( *new CTSLMultiWaterfallChannelData( GetInstance(), ( CTSLMultiWaterfallChannelData ( CLPBaseClass::* )() ) &::CTPLMultiWaterfallChannel::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::CTPLMultiWaterfallChannel( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTPLMultiWaterfallChannel ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLChannelDisplayLevelView( GetInstance(), _T( "Levels" ))),
  Color( GetInstance(), _T( "Color" ) ),
  Data( *new CTSLMultiWaterfallChannelData( GetInstance(), ( CTSLMultiWaterfallChannelData ( CLPBaseClass::* )() ) &::CTPLMultiWaterfallChannel::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::CTPLMultiWaterfallChannel( CLPBaseComponent *a_control, CTPLMultiWaterfallChannel ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLChannelDisplayLevelView( GetInstance(), _T( "Levels" ))),
  Color( GetInstance(), _T( "Color" ) ),
  Data( *new CTSLMultiWaterfallChannelData( GetInstance(), ( CTSLMultiWaterfallChannelData ( CLPBaseClass::* )() ) &::CTPLMultiWaterfallChannel::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::CTPLMultiWaterfallChannel( CLPBaseComponent *a_control, CTPLMultiWaterfallChannel ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTPLMultiWaterfallChannel ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLChannelDisplayLevelView( GetInstance(), _T( "Levels" ))),
  Color( GetInstance(), _T( "Color" ) ),
  Data( *new CTSLMultiWaterfallChannelData( GetInstance(), ( CTSLMultiWaterfallChannelData ( CLPBaseClass::* )() ) &::CTPLMultiWaterfallChannel::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::CTPLMultiWaterfallChannel( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLChannelDisplayLevelView( GetInstance(), _T( "Levels" ))),
  Color( GetInstance(), _T( "Color" ) ),
  Data( *new CTSLMultiWaterfallChannelData( GetInstance(), ( CTSLMultiWaterfallChannelData ( CLPBaseClass::* )() ) &::CTPLMultiWaterfallChannel::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::CTPLMultiWaterfallChannel( const CTPLMultiWaterfallChannel &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  InputPin( GetInstance(), _T( "InputPin" ) ),
  Levels( *new CTSLChannelDisplayLevelView( GetInstance(), _T( "Levels" ))),
  Color( GetInstance(), _T( "Color" ) ),
  Data( *new CTSLMultiWaterfallChannelData( GetInstance(), ( CTSLMultiWaterfallChannelData ( CLPBaseClass::* )() ) &::CTPLMultiWaterfallChannel::GetVC_Data ))
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel::~CTPLMultiWaterfallChannel()
{
  delete &Levels;
  delete &Data;
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannel & CTPLMultiWaterfallChannel::operator = ( const CTPLMultiWaterfallChannel & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTPLMultiWaterfallChannel::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData CTPLMultiWaterfallChannel::GetVC_Data()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Plmultiwaterfall@TPLMultiWaterfallChannel@GetVC_Data$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  VCLHANDLE __0_RtnValue_ = NULL;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      mov  __0_RtnValue_,eax
      pop  eax
      }
    }

  return (CTSLMultiWaterfallChannelData)__0_RtnValue_;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels::CTPLMultiWaterfallChannels( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels::CTPLMultiWaterfallChannels( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels::CTPLMultiWaterfallChannels( CLPClassProperty *a_property, CTPLMultiWaterfallChannels ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels::CTPLMultiWaterfallChannels( CLPClassProperty *a_property, CTPLMultiWaterfallChannels ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTPLMultiWaterfallChannels ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels::CTPLMultiWaterfallChannels( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTPLMultiWaterfallChannels ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels::CTPLMultiWaterfallChannels( CLPBaseComponent *a_control, CTPLMultiWaterfallChannels ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels::CTPLMultiWaterfallChannels( CLPBaseComponent *a_control, CTPLMultiWaterfallChannels ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTPLMultiWaterfallChannels ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels::CTPLMultiWaterfallChannels( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels::CTPLMultiWaterfallChannels( const CTPLMultiWaterfallChannels &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallChannels & CTPLMultiWaterfallChannels::operator = ( const CTPLMultiWaterfallChannels & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTPLMultiWaterfallChannels::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData::CTSLMultiWaterfallChannelData( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData::CTSLMultiWaterfallChannelData( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData::CTSLMultiWaterfallChannelData( CLPClassProperty *a_property, CTSLMultiWaterfallChannelData ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData::CTSLMultiWaterfallChannelData( CLPClassProperty *a_property, CTSLMultiWaterfallChannelData ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLMultiWaterfallChannelData ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData::CTSLMultiWaterfallChannelData( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLMultiWaterfallChannelData ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData::CTSLMultiWaterfallChannelData( CLPBaseComponent *a_control, CTSLMultiWaterfallChannelData ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData::CTSLMultiWaterfallChannelData( CLPBaseComponent *a_control, CTSLMultiWaterfallChannelData ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLMultiWaterfallChannelData ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData::CTSLMultiWaterfallChannelData( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData::CTSLMultiWaterfallChannelData( const CTSLMultiWaterfallChannelData &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTSLMultiWaterfallChannelData & CTSLMultiWaterfallChannelData::operator = ( const CTSLMultiWaterfallChannelData & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLMultiWaterfallChannelData::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline void CTSLMultiWaterfallChannelData::Clear()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Plmultiwaterfall@TSLMultiWaterfallChannelData@Clear$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView::CTPLMultiWaterfallDataView( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView::CTPLMultiWaterfallDataView( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView::CTPLMultiWaterfallDataView( CLPClassProperty *a_property, CTPLMultiWaterfallDataView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView::CTPLMultiWaterfallDataView( CLPClassProperty *a_property, CTPLMultiWaterfallDataView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTPLMultiWaterfallDataView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView::CTPLMultiWaterfallDataView( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTPLMultiWaterfallDataView ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView::CTPLMultiWaterfallDataView( CLPBaseComponent *a_control, CTPLMultiWaterfallDataView ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView::CTPLMultiWaterfallDataView( CLPBaseComponent *a_control, CTPLMultiWaterfallDataView ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTPLMultiWaterfallDataView ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control)
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView::CTPLMultiWaterfallDataView( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView::CTPLMultiWaterfallDataView( const CTPLMultiWaterfallDataView &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL )
{
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView & CTPLMultiWaterfallDataView::operator = ( const CTPLMultiWaterfallDataView & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTPLMultiWaterfallDataView::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfall::CTPLMultiWaterfall( HWND hParent ) :
  InputPins( GetInstance(), _T( "InputPins" ) ),
  Channels( *new CTPLMultiWaterfallChannels( GetInstance(), _T( "Channels" ))),
  ChannelButtons( *new CTSLViewButtonSettings( GetInstance(), _T( "ChannelButtons" ))),
  DataView( *new CTPLMultiWaterfallDataView( GetInstance(), ( CTPLMultiWaterfallDataView ( CLPBaseClass::* )() ) &::CTPLMultiWaterfall::GetWaterfallDataView ))
{
  LibraryHandle = ::Get_PlotLabPkgCB6();
  Open( hParent );
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfall::CTPLMultiWaterfall() :
  InputPins( GetInstance(), _T( "InputPins" ) ),
  Channels( *new CTPLMultiWaterfallChannels( GetInstance(), _T( "Channels" ))),
  ChannelButtons( *new CTSLViewButtonSettings( GetInstance(), _T( "ChannelButtons" ))),
  DataView( *new CTPLMultiWaterfallDataView( GetInstance(), ( CTPLMultiWaterfallDataView ( CLPBaseClass::* )() ) &::CTPLMultiWaterfall::GetWaterfallDataView ))
{
}
//------------------------------------------------------------------------------
inline void CTPLMultiWaterfall::Open( HWND hParent )
{
  LibraryHandle = ::Get_PlotLabPkgCB6();
  CLPControl::OpenControl( _T( "TPLMultiWaterfall" ), hParent );
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfall::~CTPLMultiWaterfall()
{
  delete &Channels;
  delete &ChannelButtons;
  delete &DataView;
}
//------------------------------------------------------------------------------
inline TLPFunctionEntry CTPLMultiWaterfall::GetFunction( const char *function_name )
{
  TLPFunctionEntry Result = VCL_GetFunction( LibraryHandle, function_name );
  if( Result )
    return Result;

  return inherited::GetFunction( function_name );
}
//------------------------------------------------------------------------------
inline CTPLMultiWaterfallDataView CTPLMultiWaterfall::GetWaterfallDataView()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Plmultiwaterfall@TPLMultiWaterfall@GetWaterfallDataView$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  VCLHANDLE __0_RtnValue_ = NULL;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      mov  __0_RtnValue_,eax
      pop  eax
      }
    }

  return (CTPLMultiWaterfallDataView)__0_RtnValue_;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline TLPFunctionEntry CTPLMultiWaterfallLayer::GetFunction( const char *function_name )
{
  TLPFunctionEntry Result = VCL_GetFunction( LibraryHandle, function_name );
  if( Result )
    return Result;

  return inherited::GetFunction( function_name );
}
//------------------------------------------------------------------------------
#endif   // CPLMultiWaterfallCode_H_
//------------------------------------------------------------------------------
